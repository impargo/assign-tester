name: 'Assign QA tester'
description: 'to test the pull request against the attached review checklist'
inputs:
  testers:
    description: 'testers list'
    required: true
runs:
  using: "composite"
  steps:
    - name: Find Comment
      uses: peter-evans/find-comment@v2
      id: fc
      with:
        issue-number: ${{ github.event.pull_request.number }}
        comment-author: 'github-actions[bot]'
        body-includes: happy testing
    - name: Has QA tester?
      id: has-tester
      shell: bash
      run: |
        if [ -z "$COMMENT_ID" ]; then
          echo "::set-output name=has_tester::false"
        else
          echo "::set-output name=has_tester::true"
        fi
      env:
        COMMENT_ID: ${{ steps.fc.outputs.comment-id }}
    - name: Pickup QA tester
      shell: bash
      if: ${{ steps.has-tester.outputs.has_tester == 'false' }}
      id: get-reviewer
      run: |
        REVIEWER=${REVIEWERS[ $RANDOM % ${#REVIEWERS[@]} ]}
        echo "::set-output name=REVIEWER::$REVIEWER"
      env:
       REVIEWERS: ${{ inputs.testers }}
    - name: debug the file structure
      run: |
        cp ${{ github.action_path }}/review-checklist.md review-checklist.md
        ls
      shell: bash
    - name: Render checklist template
      if: ${{ steps.has-tester.outputs.has_tester == 'false' }}
      id: get-checklist
      uses: chuhlomin/render-template@v1.4
      with:
        template: review-checklist.md
        vars: |
          reviewer: ${{ steps.get-reviewer.outputs.REVIEWER }}
    - name: create or update the comment
      if: ${{ steps.has-tester.outputs.has_tester == 'false' }}
      uses: peter-evans/create-or-update-comment@v2
      with:
        issue-number: ${{ github.event.pull_request.number }}
        body: ${{ steps.get-checklist.outputs.result }}
